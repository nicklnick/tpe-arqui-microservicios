apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ .Values.db.statefulSet.name }}"
spec:
  replicas: {{ .Values.db.statefulSet.replicas }}
  selector:
    matchLabels:
      app: "{{ .Values.db.name }}"
  template:
    metadata:
      labels:
        app: "{{ .Values.db.name }}"
    spec:
      containers:
        - name: "{{ .Values.db.name }}"
          image: "{{ .Values.db.image.repository }}:{{ .Values.db.image.tag }}"
          volumeMounts:
            - mountPath: "{{ .Values.db.statefulSet.volume.mountPath }}"
              name: "{{ .Values.db.statefulSet.volume.name }}"
          ports:
            - containerPort: {{ .Values.db.containerPort }}
          readinessProbe:
            exec:
              command: [ "redis-cli", "ping" ]
            initialDelaySeconds: 20
            timeoutSeconds: 5
            periodSeconds: 3
            successThreshold: 1
            failureThreshold: 3
      volumes:
        - name: "{{ .Values.db.statefulSet.volume.name }}"
          persistentVolumeClaim:
            claimName: "{{ .Values.db.pvc.name }}"

