# Enable or disable microservices
role-manager:
  enabled: false
chats:
  enabled: false
document-manager:
  enabled: true
postgres:
  enabled: true
buildApi: true

# Configure api
api:
  name: api-document-manager
  env:
  - name: PG_HOST
    value: db-document-manager
  - name: PG_PORT
    value: "5432"
  - name: PG_DB
    value: db_document_manager
  - name: PG_USER
    value: postgres
  - name: PG_PASSWORD
    value: postgres
  - name: PGVECTOR_HOST
    value: db-embeddings
  - name: PGVECTOR_PORT
    value: "5432"
  - name: PGVECTOR_DB
    value: db_embeddings
  - name: PGVECTOR_USER
    value: langchain
  - name: PGVECTOR_PASSWORD
    value: langchain
  - name: COHERE_API_KEY
    value: 67R9m15IQFIoLIiCWAk5uyJ5JVIqPfuApiJOlNhc
  deployment:
    replicas: 1
    name: document-manager-deployment
  image:
    repository: docker.io/nicklnick/document-manager
    tag: prod-202406231937
  service:
    name: document-manager-svc
  ingress:
    path: /users
    pathType: Prefix
  servicePort: 8080
  containerPort: 3000

# Configure db
db:
  name: db-document-manager
  env:
  - name: POSTGRES_DB
    value: db_document_manager
  - name: POSTGRES_PASSWORD
    value: postgres
  - name: POSTGRES_USER
    value: postgres
  deployment:
    replicas: 1
    name: db-document-manager-deployment
    volume:
      mountPath: /var/lib/postgresql/data
      name: postgresdata
  image:
    repository: postgres
    tag: 13
  service:
    name: db-document-manager-svc
  pvc:
    name: db-document-manager-pvc
    accessMode: ReadWriteOnce
    size: 10Gi 
  servicePort: 5432
  containerPort: 5432
