apiVersion: apps/v1
kind: Deployment
metadata:
    name: "{{ .Values.roleManager.db.deployment.name }}"
spec:
    replicas: {{ .Values.roleManager.db.deployment.replicas }}
    selector:
        matchLabels:
            app: "{{ .Values.roleManager.db.name }}"
    template:
        metadata:
            labels:
                app: "{{ .Values.roleManager.db.name }}"
        spec:
            containers:
                - name: "{{ .Values.roleManager.db.name }}"
                  image: "{{ .Values.roleManager.db.image.repository }}:{{ .Values.roleManager.db.image.tag }}"
                  env:
                      - name: POSTGRES_DB
                        value: "{{ .Values.roleManager.db.pgVariables.name }}"
                      - name: POSTGRES_PASSWORD
                        value: "{{ .Values.roleManager.db.pgVariables.password }}"
                      - name: POSTGRES_USER
                        value: "{{ .Values.roleManager.db.pgVariables.user }}"
                  ports:
                      - containerPort: {{ .Values.roleManager.db.containerPort }}
                  readinessProbe:
                      exec:
                          command:
                              - "pg_isready"
                              - "-d"
                              - "$(POSTGRES_DB)"
                              - "-U"
                              - "$(POSTGRES_USER)"
                      initialDelaySeconds: 5
                      periodSeconds: 10
                      timeoutSeconds: 5
                      successThreshold: 1
                      failureThreshold: 3
